{
	// Place your StoryScript workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Locations": {
		"scope": "javascript,typescript",
		"prefix": "ssLocation",
		"body": [
			"namespace ${TM_DIRECTORY/((^[\\\\\\\\:\\w]*Games\\\\)|(\\\\[\\w]*$))//g}.Locations {",
			"\texport function ${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}() {",
			"\t\treturn Location({",
			"\t\t\tname: '${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}',",
			"\t\t\tdestinations: [",
			"\t\t\t],",
			"\t\t\tfeatures: [",
			"\t\t\t],",
			"\t\t\titems: [",
			"\t\t\t],",
			"\t\t\tenemies: [",
			"\t\t\t],",
			"\t\t\tpersons: [",
			"\t\t\t],",
			"\t\t\tenterEvents: [",
			"\t\t\t],",
			"\t\t\tleaveEvents: [",
			"\t\t\t],",
			"\t\t\tactions: [",
			"\t\t\t],",
			"\t\t\tcombatActions: [",
			"\t\t\t],",
			"\t\t});",
			"\t}",
			"}"
		],
		"description": "Add a new location"
	},

	"Features": {
		"scope": "javascript,typescript",
		"prefix": "ssFeature",
		"body": [
			"namespace ${TM_DIRECTORY/((^[\\\\\\\\:\\w]*Games\\\\)|(\\\\[\\w]*$))//g}.Features {",
			"\texport function ${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}() {",
			"\t\treturn Feature({",
			"\t\t\tname: '${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}',",
			"\t\t\tcombinations: {",
			"\t\t\t\tcombine: [",
			"\t\t\t\t\t",
			"\t\t\t\t],",
			"\t\t\t},",
			"\t\t});",
			"\t}",
			"}"
		],
		"description": "Add a new feature"
	},

	"InlineFeatures": {
		"scope": "javascript,typescript",
		"prefix": "ssFeature-inline",
		"body": [
			"{",
			"\tname: '$0',",
			"\tcombinations: {",
			"\t\tcombine: [",
			"\t\t\t",
			"\t\t],",
			"\t},",
			"},",
		],
		"description": "Add a new inline feature"
	},

	"Enemies": {
		"scope": "javascript,typescript",
		"prefix": "ssEnemy",
		"body": [
			"namespace ${TM_DIRECTORY/((^[\\\\\\\\:\\w]*Games\\\\)|(\\\\[\\w]*$))//g}.Enemies {",
			"\texport function ${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}() {",
			"\t\treturn Enemy({",
			"\t\t\tname: '${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}',",
			"\t\t\thitpoints: 10,",
			"\t\t\titems: [",
			"\t\t\t],",
			"\t\t});",
			"\t}",
			"}"
		],
		"description": "Add a new enemy"
	},

	"Persons": {
		"scope": "javascript,typescript",
		"prefix": "ssPerson",
		"body": [
			"namespace ${TM_DIRECTORY/((^[\\\\\\\\:\\w]*Games\\\\)|(\\\\[\\w]*$))//g}.Persons {",
			"\texport function ${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}() {",
			"\t\treturn Person({",
			"\t\t\tname: '${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}',",
			"\t\t\thitpoints: 10,",
			"\t\t\titems: [",
			"\t\t\t],",
			"\t\t\tquests: [",
			"\t\t\t],",
			"\t\t\tconversation: {",
			"\t\t\t\tactions: {",
			"\t\t\t\t}",
			"\t\t\t},",
			"\t\t});",
			"\t}",
			"}"
		],
		"description": "Add a new person"
	},

	"Items": {
		"scope": "javascript,typescript",
		"prefix": "ssItem",
		"body": [
			"namespace ${TM_DIRECTORY/((^[\\\\\\\\:\\w]*Games\\\\)|(\\\\[\\w]*$))//g}.Items {",
			"\texport function ${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}() {",
			"\t\treturn Item({",
			"\t\t\tname: '${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}',",
			"\t\t\tequipmentType: StoryScript.EquipmentType.Miscellaneous,",
			"\t\t});",
			"\t}",
			"}"
		],
		"description": "Add a new item"
	},

	"Destinations": {
		"scope": "javascript,typescript",
		"prefix": "ssDestination",
		"body": [
			"{",
				"\tname: '',",
				"\ttarget: null",
			"},",
		],
		"description": "Add a new destination"
	},

	"Barriers": {
		"scope": "javascript,typescript",
		"prefix": "ssBarrier",
		"body": [
			"barrier: {",
				"\tname: '',",
				"\tactions: [",
				"\t],",
			"},",
		],
		"description": "Add a new destination barrier"
	},

	"Actions": {
		"scope": "javascript,typescript",
		"prefix": "ssAction",
		"body": [
			"{",
				"\ttext: '',",
				"\texecute: (game) => {",
				"\t\t",
				"\t},",
			"},",
		],
		"description": "Add a new action"
	},

	"Combinations": {
		"scope": "javascript,typescript",
		"prefix": "ssCombination",
		"body": [
			"combinations: {",
				"\tcombine: [",
				"\t\t",
				"\t],",
			"},",
		],
		"description": "Add a new combination"
	},

	"Combines": {
		"scope": "javascript,typescript",
		"prefix": "ssCombine",
		"body": [
			"{",
				"\tcombinationType: '',",
				"\tmatch: (game, target, tool): string => {",
				"\t\treturn '';",
				"\t},",
			"},",
		],
		"description": "Add a new combination combine"
	},

	"ConversationAction": {
		"scope": "javascript,typescript",
		"prefix": "ssConversationAction",
		"body": [
			"Action: (game, person) => {",
			"\t",
			"},",
		],
		"description": "Add a new conversation action"
	},

	"Quests": {
		"scope": "javascript,typescript",
		"prefix": "ssQuest",
		"body": [
			"{",
				"\tname: '',",
				"\tstatus: (game, quest, done) => {",
				"\t\treturn '';",
				"\t},",
				"\tcheckDone: (game, quest) => {",
				"\t\treturn false;",
				"\t},",
			"},",
		],
		"description": "Add a new quest"
	},

	"StoryFunctions": {
		"scope": "javascript,typescript",
		"prefix": "ssFunction",
		"body": [
			"(game) => {",
			"\t",
			"},"
		],
		"description": "Add a new StoryScript function"
	},
}